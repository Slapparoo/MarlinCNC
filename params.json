{"name":"MarlinCNC","tagline":"CNC focused firmware based on Marlin. SDcard and LCD support. It works on Gen6, Ultimaker, RAMPS and Sanguinololu","body":"# CNC forused firmware based on Marlin\r\n\r\nThis will give the support for all the boards Marlin supports, and allow\r\n- LCD Support\r\n- More Axis\r\n- or more steppers per axis\r\n\r\n## Motivation\r\n\r\nI originally created this branch so I could use a Mega2560/Ramps 1.4 combo for my CNC. Which would allow me to have 2 steppers for my Y-Axis and run from SD card using the LCD interface - i.e I no longer have to plug it into a computer.\r\n\r\n## Goals\r\n- The firmware will still function as a 3D printer firmware and still accept updates/bug fixes from the main Marlin branch. So no code will be removed, the removes will be logical using #define's and #ifdef etc. \r\n- Include new code paths which are specific to CNC.\r\n- Allow for PIN remapping so existing 3D printer boards like RAMPS and be used, for stepper control, spindle control etc.\r\n- Include all the gcode support currently in GRBL\r\n- include all the '$' commands currently in GRBL\r\n\r\n\r\n## From Marlin ->\r\nThis firmware is a mashup between Sprinter, grbl and many original parts.\r\n (https://github.com/kliment/Sprinter)\r\n (https://github.com/simen/grbl/tree)\r\n\r\nFeatures:\r\n - Interrupt based movement with real linear acceleration\r\n - High steprate\r\n - Look ahead (Keep the speed high when possible. High cornering speed)\r\n - Interrupt based temperature protection\r\n - preliminary support for Matthew Roberts advance algorithm \r\n   For more info see: http://reprap.org/pipermail/reprap-dev/2011-May/003323.html\r\n\r\nThis firmware is optimized for gen6 electronics.\r\n\r\nThe default baudrate is 250000. \r\nThis gives less communication errors then regular baudrates.\r\n\r\n========================================================================================\r\n\r\nConfiguring and compilation\r\n\r\n\r\nInstall the arduino software version 0018\r\n   http://www.arduino.cc/en/Main/Software\r\n\r\nInstall the sanguino software, version 0018\r\n   http://sanguino.cc/useit\r\n\r\nInstall pronterface\r\n   https://github.com/kliment/Printrun\r\n\r\nCopy the Marlin firmware\r\n   https:/github.com/ErikZalm/Marlin\r\n   (Use the download button)\r\n\r\nStart the arduino IDE.\r\nSelect Tools -> Board -> Sanguino \r\nSelect the correct serial port in Tools ->Serial Port\r\nOpen Marlin.pde\r\n\r\nChange the printer specific setting in Configuration.h to the correct values.\r\n\r\nThe following values are the most important:\r\n - float axis_steps_per_unit[]....         // Set the correct steps / mm in the corresponding field\r\n - const bool ENDSTOPS_INVERTING = false;  // Change if only positive moves are executed\r\n - #define INVERT_x_DIR true               // Change if the motor direction is wrong\r\n\r\nClick the Upload button\r\nIf all goes well the firmware is uploading\r\n\r\nStart pronterface\r\n\r\nSelect the correct Serial Port. Type 250000 in the baudrate field.\r\nPress the Connect button\r\n\r\n===============================================================================================\r\nKnown issues\r\n\r\nOn some systems we get compilation errors.\r\n\r\nThis is caused by the \"wiring_serial.c\" and \"wiring.c\".\r\nThe simple fix is to delete these files but this may have a performance impact.\r\n\r\nThe best workaround is to move these files to sanguino directory. \r\n(\".../arduino-0018/hardware/Sanguino/cores/arduino/\" on windows systems)\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}